6. Моделирование движения на
перекрестке дорог
На перекрестке двух автомобильных дорог расположены регулирующие
движение светофоры. Каждая из дорог содержит несколько полос
(рядов), автомобили двигаются в обоих направлениях. Светофоры обеспечивают
проезд автомобилей по обеим дорогам, включая левый и правый повороты
автомобилей, а также переход через эти дороги пешеходов.
Программа моделирования и визуализации движения на таком
перекрестке служит для исследования характера возникающих на перекрестке
автомобильных дорог заторов и их рассасывания в зависимости от
плотностей потоков автомобилей и режимов работы
светофоров.
Автомобили должны появляться на концах каждой из дорог случайным
образом, проезжать по ним со скоростью, заданной при их появлении,
притормаживая и останавливаясь при необходимости на перекрестке, и исчезая
после проезда всей дороги на ее противоположном конце. У каждого автомобиля
может быть своя начальная скорость, она определятся как
случайная величина из некоторого диапазона (например, от 30 до 120 км/час).
Случайной величиной является также интервал между появлениями автомобилей
на каждой дороге – от диапазона изменения этой величины (и закона еераспределения) зависит плотность потока автомобилей. Как случайную
величину, определяемую в момент появления автомобиля на дороге, следует
моделировать и направление его проезда через перекресток (прямо / налево /
направо).
Автомобили должны перестраиваться из одного ряда в
другой и пересекать перекресток в соответствии с правилами дорожного
движения. В частности, в левый ряд перед светофором становятся автомобили,
которым необходим поворот налево. Кроме правил смены полосы, в программе
должны
быть зафиксированы законы торможения и ускорения автомобилей на
перекрестке, которые в общем случае зависят от допустимого сближения между
автомобилями, величин их скорости и др. Возможность аварий (например, из-за
нарушений правил дорожного движения) в модели можно не учитывать.
Цель проводимого моделирования – изучение различных режимов работы
светофоров для поиска режима их оптимальной работы. Следует рассмотреть два
типа режимов работы: статический, когда интервалы свечения каждого цвета
(желтый, зеленый, красный) зафиксированы заранее, и динамический, при
котором интервалы свечения изменяются в соответствии с количеством
автомобилей (и пешеходов), ожидающих проезда (прохода) через дорогу.
В изменяемые параметры моделирования движения следует включить: тип
режима работы светофора, интервалы свечения каждого цвета (для статического
режима), дистанцию видимости светофора, диапазон возможных скоростей
автомобилей, интервалы случайного появления автомобилей на каждой из дорог.
Визуальная картина движения на перекрестке дорог должна содержать
изображения дорог, светофоров, движущихся машин. Полезно отобразить тем
или иным образом (например, разными цветами) возможные направления
движения автомобиля через перекресток (прямо/налево/направо). Желательно
также предусмотреть вывод некоторых подсчитанных в ходе моделирования
величин, к примеру, среднее время остановки автомобилей на перекрестке.


Отчет о выполнении задания практикума
Текст отчета должен включать следующие разделы:
1. Уточнение постановки задачи для выбранного варианта задания, при
необходимости – описание математической модели процесса или явления.
 Например: Демонстрационная модель солнечной системы.
Смоделировать на основе законов Кеплера движение планет Солнечной
системы и пролет кометы через нее с заданной скоростью.
2. Диаграмма классов, показывающая выделенные классы и связи между ними.
Например:
SolarSystem CelestialBody
Sun Planet Comet
Satellite SolarPlanet
Наследование
Агрегация
Использование
1 n
3. Текстовые спецификации интерфейса основных классов системы.
Например, для одного из классов:
//Интерфейс класса, представляющего Солнечную систему
class CSolarSystem
{ public:
47
//итераторы для объектов системы
typedef TBodies::iterator TIterator;
TIterator begin();
TIterator end();
//конструктор и деструктор
CSolarSystem(void);
~CSolarSystem(void);
//пересчет положения объектов системы
void nextFrame(double days_per_frame);
//добавление тела p в систему
void addBody(CCelestialBody * p);
//удаление тела p из системы
void removeBody(CCelestialBody * p);
};
4. Диаграмма объектов, показывающая основные объекты и их связи.
Например, для модели Солнечной системы (для наглядности на стрелках не
указываются названия вызываемых методов):
solar
mercury
venus
earth
mars
jupiter
saturn
uranus
neptune
sun
moon
phobos
deimos
europa
ganymede
titan
...
comet
5. Инструментальные средства, использованные при выполнении задания: язык
программирования, интегрированная среда, библиотеки.
Например: Язык разработки – С++
Среда разработки – Microsoft Visual Studio .NET 2003
Используемые библиотеки – OpenGL, glut.
6. Описание файловой структуры системы: перечень всех файлов программы с
указанием классов, описанных в каждом из них.
Например:
solar.cpp – главный файл, интерфейс;
48
Planets.h и Planets.cpp – объявление и описание классов CPlanets,
CSolarPlanet и CSatellite;
Comet.h и Comet.cpp – объявление и описание класса CComet;
Sun.h – описание класса CSun;
CelestialBody.h – объявление класса CCelestialBody;
CelestialBody.cpp – описание класса CCelestialBody;
SolarSystem.h – объявление класса CSolarSystem;
SolarSystem.cpp – описание класса CSolarSystem.
7. Пользовательский интерфейс: вид диалоговых окон для ввода параметров
моделирования и для визуализации моделируемого процесса или явления;
описание функций основных элементов управления этих окон.
Например: клавиши управления визуализацией Солнечной системы:
W – увеличение масштаба изображения;
S – уменьшение масштаба изображения;
A – движение налево, D – движение направо области просмотра;
Мышью при зажатой левой кнопке – повороты тел;
+ и - – увеличение и уменьшение скорости движения тел;
O – отображение/скрытие орбит;
N – отображение/скрытие названий тел Солнечной системы;
1..9 – инициирует пролет кометы со скоростью от 1 до 9 скоростей
 Земли в точке восхождения;
Е – выход из системы.
